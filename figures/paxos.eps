%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 313.000000 138.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G13033) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 313 138
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 313 138
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /l put
dup 35 /i put
dup 36 /e put
dup 37 /n put
dup 38 /t put
dup 39 /P put
dup 40 /r put
dup 41 /o put
dup 42 /c put
dup 43 /s put
dup 44 /space put
dup 45 /one put
dup 46 /d put
dup 47 /a put
dup 48 /two put
dup 49 /three put
dup 50 /period put
dup 51 /h put
dup 52 /A put
dup 53 /B put
dup 54 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<



B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592D00000000020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA0007000000562BBA0002000500562B3031331121112711211142048EB8FCE205BDFA43B8044DFBB30000000100AF0000018000DA000300264013012A030A0517171A01640019040564216365182B2B4EF44DFD4E456544E6003F4DED313037331523AFD1D1DADA000000000100C4000002D5059200080023B10801B80133400C0404070C04079605000A47091076C418C4D5FD39003F3FF4CD313013353E013733112311C4C39A268EC003F68A1359A6FA6E03F60000000100400000041E059D002200A6404E3604460457056B1D6E1E7A1E84018702082A085A196B197C197C1CB519050022010F041C0E1921071C19040100051F0F0F22130A351305201F7521220C217F0738166F220E270F811F38222447231076C418D4EDF4ED10F5EDE4003F3CFD3C3FED1112392F1217390111123912393911391239005D31304379401C04190C2511260B120E2800091407280119040D100A280108150A2801002B2B1010012B2B2B2B81005D36123F01363736353426232207060723363736213212151407060F01060706072115214A85C1C0813452967D






00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/one 3 def
/two 4 def
/three 5 def
/A 6 def
/B 7 def
/C 8 def
/D 9 def
/P 10 def
/a 11 def
/c 12 def
/d 13 def
/e 14 def
/h 15 def
/i 16 def
/l 17 def
/n 18 def
/o 19 def
/r 20 def
/s 21 def
/t 22 def
/u20B8 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9266A63CD4C2DA03F4BF340963A027151A3FDA461900D733520630E1D847687011288516492D603AB7AAB6F6B3E50DF79393D3D9B37CD832F19B0B110C3906904D966CD3709B23E0976CE48036A0B8943541BDAAB435AF5D2781A114203218CA6CC452FBC771FD74A023827AC6DA97903F8DFAA442DCEBCB296A7A4D568AEFB93EABBD4C861F95B050A88949959D16855E4A3C3123A80E2BE8BF1E997A303DEDC72FF5AAF11AB47461250A808708C2A79E5A59ADE5AA478DC383DAD326617185A38AC28E2CFBEF3D21C0BF2F609302314D86AD9C48ACFB6CE1EDD498D8B3708953E8EABDEF0E62658064735D9FDBB7010FBA29C71B0CA6C5FB246536CD1FC75AC31A739E36ACEE3CDFF69DCAF9B5F3C91561E5FA07426292B82A6ECC8273EFF3673D124379BB1CBCFDB38ED45E0DD7E859918ABFAF95DF69F6F82E197B6FEFC3A6713F32ACC5AC25EFB53D7728D4EAA205B0F215E7283ED6BF762C34A0C68A035F87BE66B9D1DA52F8763170F1C680F5F7FB853309D76D83B49B29690610D4E9106C9F5B303DB908B0ECDE6BFE2E938874355060A7B36A3AEAB7F541FD3BDCD079DB0077A1F31C2A49DFCDDC38992D661A43508B9340E5DC51BA2C8ECE2FB7932E8E229892C5C7B13AB462FEBBAAA688D6C034593AE0E20F286AC282351B65CAB296EDA119A0C875E378AF6510A67BE2D8B09D5B10218C86DE91A7277651E8C7A4BA0AC73C3B148F1FE6C507CF9BBA27E1DBA66F6C514B3BDD952C9568A3156902
CB4712B86FE45DC3581181B9263E3CEBAC893FFA124D18EA742CF524770E25192BFDC56B4EC9C964021878F302A5BEEA244F1BCE25229C7265F31B5608D1AEE202784A4EF3410BC015AEBDDE41B693A78234663C5B54879BFEF3FDBF62533D9B78D8CB212D1AE441665FEAE3EF503FEBEBDF0CF69782807224B7C95A3EB41B3BA9465A95F7E2DDDE1C69D64564D0A2B4D62F4C8B93C9761D5C6774EADA5062B77AD1B81E7A0C6634EA0CBCBA1F02ECC0025508C9325A6AC107C25898783C158234FD92EFB0F786053D6CBC5C7A5E969A82EACEC0E86ED8839E3B878A5A7FF23B92027CD86E66BB18202C3315C2537F013059D4A124931A39BC1242BBAEE8BE28D153B6C114A41B5EA4A9066E33AE32059A35CB22BBB9FD3D018F8DCD226A150B376A68C18854205473FCBE3C0753F6402F275E2313A59B9FDA199772EDB06D56ACBFF8F57DA48F766E9CCB78F0E57E3383706741CA1461AC3A14774E21FBDDE827F7232798BCE187819EE0FFD4D6171D5C0B75015336B74BDD3375454B3BF00BE48C2FB4BCDDF1F1CAD4E52F088BEAE82798B6D6FBA0A2C0C2164BA4718BBE49C35598799C2035F32DF76257E238287C492BFF5B161E9A9400AFD71F7BB74C68D6FE8A7AB39FC075B73219163E300732FBE0E3237955FAFA3D9280813AB91C0EDC696A1B61423B2F2A41BB198999CA305966332AA291234769A30AA449F136F48A4D3596E1EA8AD164985F2FAC8D4CAC6D8697DB4769D9A0B8B125601ED84F69C734B25E037CB489E4B26A2E22D771C0641F7C55E9AC8C40CCD4D4B06C6B2B907AC8D1C9D48EDA4D63EF0BCC969A2EA6041889CB92A59637B7E1874BAB2A026CD7B023A94EE0EAA68E6A6F826C5A09ECD6D44766F784D03CADE3C75337187C1482AE1791AB22DA7C8FF096E7932F015A61A174455E451D6A946D6017F0EE32F84F1CE7DD86A868478330B08A1C050EE15AC5B4D5AA94E826693722415EC3458E325EA0823824EBD943E91706C596AA7B99EDF6618779E4EDF4A7E56D6AA050940BFCBCAFCF67B729859AAD9BC107B9E7EBCF44BAF0BC4B7C068E68E60ECF2B7DB7310597F3B23EA0093BB39B35EC23E1D3898F3A41426A1BA03FBC8A2A55780904EEB4409DA0D7136B8BB51D52340533E578D2D91ADEB1354CA7742E68E5FCD07D21E37619B7F6B7E0081FF1BA696A75B2C5BEA14F5AE8AB08EC9FCD58C2C9FF2A8F87917EBB0B4BB7F01D96E85B4BB2E01D91FFADD6043170A5CEE5FFAB274316B39C5804F114AE72C3A2706827D9AF3CF26AE267B5C9A71022C1862D2C410813A3A12CDC0959D6D150E010A39B553AF782DDE195271E4D2795AEC15D65483F10B30D7CD20C82AAC0B545CEE08DAC26F270730B3DCE49BE4059916A224D6B399C73F769FFBE4A74DCBD57C031AB8E1DBEA49E643F77BE8C665E497E3B876EDC
1101A1EA5665B70D7D96C987E5F4ED988E185DD2F7B0B6ACB1F8B33E7A01CD867C6073D7904DB338ED0FC4B6F54825D8836F0D7B3AD3D9DF31F732CF4C49251C3913AA40E7F507D88473C6ADA3A53D89E26C1ECFFE9026217B12FAA9BEAB0E882C38EED5A41E17BF72031C2932354F24247A87584528530F1F4587593215329AE8678ED3372053736250E22649404B89BB9614AB820BA4AD6636B4D45F3A4434E64AFCA181E5BF312A5D991E234C47CB6D9D59A8366594287F54B22E10216FC730E0493302C6086FA73296F915E05C842BEBE306284E0C935636EEE4F8556571A0BD8FFFB8855A5273C4680A7B39D86EFFF9C68B828EC6B2C2C7E3F153E4DE5B4F853EB430948B097EEB76C3BA887FA447D1B1C0A6ACC3320F363F3323B9AF932421C96B0079D7B70265DA4EA84DDA3BEFB986622CBCCEA0DCCAA9FC5DCECFC9125BDE6ABEC39113BEB0C21B3AFB50D38DB59E3991DD16DCB33906E5123E269EA9B62869AF2555FCDC009C3B340D98779F718A37ACFCAC0C4A7ABE009C1EB5670FE0FA9468FCDC1D3A1A0E1E80C5801702C5EC0C8095445B6CEF11A14569BED31498594DFC47CDABF71EA1DB01021E7720A9521ED15FD8B2B4EABC24BDA0C52C85C9F3B9E71CD0D5F88F88A0FD936F52EA1576F276619B9183A7468DC033C60CB5A4C61E356F1C7EAABB001A76A973EA579153574C442B1D1E7DCAB8BE7C46952889EB2D64D44DD096F50772A40BEC600F6D3181A324824674191EEF17A7785E8E0AA2AE8FD08553F8CD1E414C7E285764C1E71DB8E874ED130FBFF6D492054D19BEF48832B2B6ED28919E20DAE17A49138E38712424E0E75EC66838F11B049ED4600022AD69BCC09BCF09CF44558DF1FCDAE50DCEFB8F5E2487E1B70173A0205DDB0A923DFF505DFC995E5BE7BA1ABDA8390A27EF3F6C1B9A5DA156EE40CBCA665BB62DBF317FE62B187D13257DB4223BD6AD872893ED80436F375E0D5BFB493F2E78815666AAD5804850C2FC8D5F6B5DA243652C4D74E4AC40E8A9F2083D9DFFA804425DD81135AB1ADFB87E244D141B362508CCCA3ABB1A430B189605BB43CE2766F88FDC9FC0277B8E30CA4F164206B334804CDEA0E0E947F8444BDD776E980F0E14F85E6D6C40C6B023596392C84BA71BCC78B6111186A09BD5066D556651DE0495FEEB39ECB52C0E22282352AE64775742343C2554C3C92E3A53000F93C654DDCDF8D8868D6C88A2AFCC72A1B967F99C46A8325B27F56FC3460E7BCABF5D9ADA9B0DA086F15AF79F0F947963AE8313AB3FDD2493597B1B152F58F44B5E294123ACFD8BF5FE4BC334AFFF3A71CEBCBC1A2A76D801ED09511F94FA19F16F527F26F99EE05474420C330F2550707C4EFC01CE7D9A3CED16955CDCB0FD98CB5CFF27DA0314796AEAB9A7894CCBF87E632E4B1240B6FB36408705A9D4B722EE

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Helvetica-Oblique
%!FontType1-1.0: Helvetica-Oblique 1.0000.0.0000
14 dict begin/FontName /Helvetica-Oblique def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /v put
dup 34 /a put
dup 35 /l put
dup 36 /u put
dup 37 /e put
dup 38 /r put
dup 39 /p put
dup 40 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1910 1 index div -985 2 index div 3218 3 index div 2331 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000038C6670676D000000000000042800000A1D676C79660000000000000E48000009086865616400000000000017500000003668686561000000000000178800000024686D747800000000000017AC000000286C6F636100000000000017D4000000166D61787000000000000017EC0000002070726570000000000000180C0000047CC0051000BD05280080051A002F041F000000D9FF0000DAFF0000D9FF55FEE6FFC70510006DFEF1FF3B030000B9000000B900FE023C3FC0008D009B00AF000600A800C00028005E009800C9006A01B9005C01B400D6001E012E0080000400B8004C00CC00FF01D1FF6600A400AF007400C2009500B1000C0028006D0015004C008E0025017AFF0C0040004C0062008400A2FF240038008600BD0039005E008E00ED00A9FFB3FF400052005500AA00AB00C200CB002301B1021304AEFFE4FF0800510074008400AA00D1004CFFAFFF12002C004200500051008400BE002501DA0368FF18003B0098009C009F00A100C100EC008201B40168FF76FFD0FFE1FF020018001C00530053007D00B401E101AF0386049CFFEAFFFEFF1F0028002A00520060009300A300AA00AF00AF00C000000145016B0174019301950140028202B40285041705FDFE060029004700470048006F008800B400B900C400F200F900EF01180210037403C50335FFF3FF0B004B004C0052005500650076007600870087008E00AB00BB0006013001430150017D0194019501D3012A025502580277027802E6024E035C037903D3037304B2048C0598050B06F5FEBBFFC7FFD5FF17001D005B0072007E009C00C200D000F400FA00030106011C0125013B0142015E015E0180019B01B902A101B9015002C001D001AA02DF01E301EF01FB0105020C0215022B0274029302AB02C202CE02690395039903DF03F5033E040205A105E5052506DB0762FE89FECEFE3BFFE1FFF8FF030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3001C01ED00F800F900000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F601000200020902110217021C02530262026D028002D50280021B032A034A035A03AF03AF03C803D603FB03FB03050413041504470449048C006D049A049A04A604A804B204CF0439053E054E055605800589058C056303D105D6057E068E06B206EF06F00628074C076F078C07B400C900C000C10000000000000000000000000004002401AF0032006E0063004401620196004301A10161018A00740064008801EF01700128005DFF7E0347033002AA00BE007B0062009A007D0089005C03A100D8FFAA03D70093006C0000008000A70042041D0097051D00820030002A00




10B9000C01B8F441050059000C0069000C00025D410B0008000C0018000C0028000C0038000C0048000C00055D30310133073E0133321617072E01232206070323016CAB2720C56B05181C28101A1088B71982B4042FB9369B0203BE0302AF72FD980000000100ABFFE304C1042F001700A5B800532B00B801B54558B800002F1BB9000001C23E59B801B54558B8000A2F1BB9000A01C23E59B801B54558B800122F1BB9001201BE3E59B801B54558B8000C2F1BB9000C01BE3E59B8001210B9000501B6F4411B0007000500170005002700050037000500470005005700050067000500770005008700050097000500A7000500B7000500C70005000D5D410500D6000500E6000500025DBA000E001200001112393031010306171633323736371333032337060706232227263713021B97110F1B83BC68382170B4E3AA23303D7993E5321C1D9B042FFD39523460A85A9D020EFBD19E3D2A5499528902D800000100EE000004CD042F00060044B800532B00B801B54558B800002F1BB9000001C23E59B801B54558B800022F1BB9000201C23E59B801B54558B800042F1BB9000401BE3E59BA00010004000011123930310113013301230301BF6501E4C5FD89C0A8042FFC980368FBD1042F0000000001001BFE4904CB042F001800A5B800532B00B801B54558B800002F1BB9000001C23E59B801B54558B800162F1BB9001601C23E59B801B54558B800082F1BB9000801C03E59B801B54558B8000B2F1BB9000B01C03E59B8000810B9000F01B6F4411B0007000F0017000F0027000F0037000F0047000F0057000F0067000F0077000F0087000F0097000F00A7000F00B7000F00C7000F000D5D410500D6000F00E6000F00025DBA0018000800001112393031013306030207020623222627371E01333236373E01370333130404C73CD19C67F4A69C26281C232C2910323615075D16A2CC66042F67FE91FEECAEFE66B40608A40D062118089424044EFC9800000200F50000057105930007000B0045B800532B00B801B54558B800012F1BB9000101C23E59B801B54558B800052F1BB9000501BE3E59BB000901B8000800572BB8000110B9000001B8F4B80003D0B80004D03031133721072103231301372107F524041324FE4FC6B2C6FE952404132403A6A8A8FC5A03A60146A7A7000000000100000000000005B62A905F0F3CF500110800000000005F4D8F0000000000D5670BF3F88AFC270C92091B000200090001000000000000000100000629FE2900000C01F88AFC350C92080001B3000000000000000000000000000A05120042047300700473007D01C700890473001B02AA0089047300AB040000EE0400001B047300F500000048012401D201F602AA030E038C03C404440484000000010000000A0096000900000000000200100010

456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A62045694475
00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/a 1 def
/e 2 def
/l 3 def
/p 4 def
/r 5 def
/u 6 def
/v 7 def
/y 8 def
/u20B8 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1910 -985 3218 2331}def
/UniqueID 4404112 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F63946432A100A72F0700E471C6AECB1F3AE72601F4FBA141E6DAA154933D47293681E1AF19EB09BC4B0B8EA08CB9CABB31741A44CF2EAB20ADC8CCB10041E91AA22054AE389463D4CFBEC4B5DDFD0BC797B561134AB1A394CCDA074CA37E4631EC237A57229F48F3CA2EDDF592691FBFA334A64BB87D35A2672395343D5D6194E293BFE58D49AB7D16B013D8D63BD1D3E155E001A1C57ADE058BF91BF4F6EE42321D258DFB08617C86FAB1788D44409C9B1B0346529B32F9FB27C26CC4DC89715C3246742C1848D157D1425305999804441ABD7049B48AA7E0CE5DA5974CDF5577F13713625D5182A0D2829DAE7111B32CC298AED7B92D7EE72223E8E074FC2D024F357E4D6B069FDB0150C27E84B51215AF3C061A46CC3F040345A17A0BFA945FD46B9B02AAAE29EE6833A602413F6413A7E3B2C477C0B300D9F11DCF49C9B7165729BCA5210A0E7566BBAB742891D477DF5EA22A29B5815BD1C980C5B67F92AAD3F65785E4CCB022D7C8C0948ECD8053326E634E4307F2E5EE1FA7DB39FF27D0F52028FE19253432B8C903F60052D90995D997F6628E17CC413E087F26B5E5B842A08C61E507C53591659E575DFBB49EEF9C82A36E1C4099980FC61EBAA4D356DC64282FA7ADA95BBD91CC9F5CA0C969BFAB8469C8FF3FBB0CB51E44A4F96B989D1BCCE76F7DF42AE378FC9A1C81892CA01A9B8335C90926B1D1D61120FFC59C0A81B5A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica-Oblique cguidfix
/F2.1/Helvetica-Oblique renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 313 138 rc
0 138 m
313 138 l
313 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-13 411 m
558 411 l
558 -407 l
-13 -407 l
h
-13 411 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -13 411 cm
72 279 m
315.23386 279 l
S
0 i
CM
310.23386 132 m
302.23386 135 l
302.23386 129 l
h
310.23386 132 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
323.23386 279 m
315.23386 276 l
315.23386 282 l
h
323.23386 279 m
S
/Cs1 SC
0 sc
/F1.1[ 10 0 0 -10 0 0]sf
33.716797 283.5 m
(!"#$%&)[ 7.221680 2.221680 2.221680 5.561523 5.561523 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
72 315 m
315.23386 315 l
S
0 i
CM
310.23386 96 m
302.23386 99 l
302.23386 93 l
h
310.23386 96 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
323.23386 315 m
315.23386 312 l
315.23386 318 l
h
323.23386 315 m
S
/Cs1 SC
0 sc
18.268555 314.5 m
('\(\)*$++,-)[ 6.669922 3.330078 5.561523 5.000000 5.561523 5.000000 5.000000 2.778320 0.000000 ] xS
/F1.1[ 8 0 0 -8 0 0]sf
19.599609 324.5 m
(!\)\)\(.#%/&\)\()[ 5.777344 4.449219 4.449219 2.664062 4.449219 1.777344 4.449219 4.449219 2.222656 4.449219 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
72 342 m
315.23386 342 l
S
0 i
CM
310.23386 69 m
302.23386 72 l
302.23386 66 l
h
310.23386 69 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
323.23386 342 m
315.23386 339 l
315.23386 345 l
h
323.23386 342 m
S
1 J
1 j
0.60000002 i
72 369 m
315.23386 369 l
S
0 i
CM
310.23386 42 m
302.23386 45 l
302.23386 39 l
h
310.23386 42 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
323.23386 369 m
315.23386 366 l
315.23386 372 l
h
323.23386 369 m
S
1 J
1 j
0.60000002 i
72 405 m
315.5173 405 l
S
0 i
CM
310.5173 6 m
302.5173 9 l
302.5173 3 l
h
310.5173 6 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
323.5173 405 m
315.5173 402 l
315.5173 408 l
h
323.5173 405 m
S
/Cs1 SC
0 sc
/F1.1[ 10 0 0 -10 0 0]sf
18.768555 346.5 m
('\(\)*$++,0)[ 6.669922 3.330078 5.561523 5.000000 5.561523 5.000000 5.000000 2.778320 0.000000 ] xS
18.268555 373.5 m
('\(\)*$++,1)[ 6.669922 3.330078 5.561523 5.000000 5.561523 5.000000 5.000000 2.778320 0.000000 ] xS
18.926035 408.83463 m
('\(\)*$++,%)[ 6.669922 3.330078 5.561523 5.000000 5.561523 5.000000 5.000000 2.778320 0.000000 ] xS
0.5 w
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
163.55905 280.06299 m
170.29819 306.64511 l
S
0 i
CM
159.26416 96.60022 m
160.20618 105.09213 l
154.39018 103.61765 l
h
159.26416 96.60022 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
172.26416 314.39978 m
173.20618 305.90787 l
167.39018 307.38235 l
h
172.26416 314.39978 m
S
1 J
1 j
0.60000002 i
201.90944 315.49997 m
214.8062 334.84509 l
S
0 i
CM
206.2438 69.498497 m
204.30235 77.819 l
199.31004 74.490799 l
h
206.2438 69.498497 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
219.2438 341.5015 m
217.30235 333.181 l
212.31004 336.50922 l
h
219.2438 341.5015 m
S
1 J
1 j
0.60000002 i
201.90944 315.49997 m
217.00015 360.77206 l
S
0 i
CM
206.52997 42.638454 m
206.84619 51.176605 l
201.1541 49.27924 l
h
206.52997 42.638454 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
219.52997 368.36154 m
219.84619 359.82339 l
214.1541 361.72076 l
h
219.52997 368.36154 m
S
/Cs1 SC
0 sc
/F2.1[ 8 0 0 -8 0 0]sf
171.90205 296.84644 m
(!"#$%)[ 4.000000 4.449219 1.777344 4.449219 0.000000 ] xS
0 -1 -1 0 417.14172 65.220482 cm
/F1.1[ 8 0 0 -8 0 0]sf
36.624462 390.96063 m
(2,2,2)[ 2.222656 2.222656 2.222656 2.222656 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -13 411 cm
201.27953 314.92914 m
214.39397 396.27551 l
S
0 i
CM
202.66727 6.8264542 m
204.35573 15.201962 l
198.43221 14.246988 l
h
202.66727 6.8264542 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
215.66727 404.17355 m
217.35573 395.79803 l
211.43221 396.75302 l
h
215.66727 404.17355 m
S
1 J
1 j
0.60000002 i
82.767708 316.07083 m
95.664467 335.41599 l
S
0 i
CM
87.102074 68.92762 m
85.160622 77.248123 l
80.16832 73.919922 l
h
87.102074 68.92762 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
100.10207 342.07239 m
98.160622 333.75186 l
93.16832 337.08008 l
h
100.10207 342.07239 m
S
1 J
1 j
0.60000002 i
82.767708 316.07083 m
97.858414 361.34296 l
S
0 i
CM
87.388237 42.067581 m
87.704468 50.605732 l
82.012367 48.708363 l
h
87.388237 42.067581 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
100.38824 368.93243 m
100.70447 360.39426 l
95.012367 362.29163 l
h
100.38824 368.93243 m
S
1 J
1 j
0.60000002 i
82.137794 315.5 m
95.252235 396.84641 l
S
0 i
CM
83.525536 6.255579 m
85.213997 14.631086 l
79.290482 13.676113 l
h
83.525536 6.255579 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
96.525536 404.74442 m
98.213997 396.36893 l
92.290482 397.32388 l
h
96.525536 404.74442 m
S
1 1 1 sc
CM
56.732281 87.56694 m
93.732285 87.56694 l
93.732285 77.56694 l
56.732281 77.56694 l
h
56.732281 87.56694 m
f
/Cs1 SC
0 sc
1 0 0 -1 -13 411 cm
70.886581 331.43307 m
('3/+$,-4)[ 5.335938 4.449219 4.449219 4.000000 4.449219 2.222656 4.449219 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
111.68504 341.92914 m
124.58179 322.58398 l
S
0 i
CM
116.01939 95.072418 m
109.08564 90.080109 l
114.07794 86.751907 l
h
116.01939 95.072418 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
129.01939 315.92758 m
122.08564 320.91989 l
127.07794 324.24808 l
h
129.01939 315.92758 m
S
1 J
1 j
0.60000002 i
116.7874 368.92914 m
131.8781 323.65701 l
S
0 i
CM
121.40793 94.932457 m
116.03205 88.291672 l
121.72415 86.394302 l
h
121.40793 94.932457 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
134.40793 316.06754 m
129.03206 322.70834 l
134.72415 324.60568 l
h
134.40793 316.06754 m
S
1 J
1 j
0.60000002 i
126.13779 404 m
141.04015 323.97363 l
S
0 i
CM
129.50471 94.891159 m
125.09085 87.575569 l
130.98946 86.477142 l
h
129.50471 94.891159 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
142.50471 316.10886 m
138.09085 323.42444 l
143.98946 324.52286 l
h
142.50471 316.10886 m
S
1 1 1 sc
CM
174.08661 89.688995 m
211.08661 89.688995 l
211.08661 79.688995 l
174.08661 79.688995 l
h
174.08661 89.688995 m
f
/Cs1 SC
0 sc
1 0 0 -1 -13 411 cm
188.24091 329.311 m
('3/+$,04)[ 5.335938 4.449219 4.449219 4.000000 4.449219 2.222656 4.449219 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
98.401573 65.173241 m
135.40157 65.173241 l
135.40157 55.173237 l
98.401573 55.173237 l
h
98.401573 65.173241 m
f
/Cs1 SC
0 sc
1 0 0 -1 -13 411 cm
112.55587 353.82675 m
('3/+$,-5)[ 5.335938 4.449219 4.449219 4.000000 4.449219 2.222656 4.449219 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
230.37007 342.64172 m
243.26683 323.29657 l
S
0 i
CM
234.70444 94.359825 m
227.77068 89.367523 l
232.76299 86.039322 l
h
234.70444 94.359825 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
247.70444 316.64017 m
240.77068 321.63248 l
245.76299 324.96069 l
h
247.70444 316.64017 m
S
1 J
1 j
0.60000002 i
235.47244 369.64172 m
250.56314 324.3696 l
S
0 i
CM
240.09296 94.219864 m
234.71709 87.579079 l
240.40919 85.681717 l
h
240.09296 94.219864 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
253.09296 316.78012 m
247.71709 323.42093 l
253.40919 325.3183 l
h
253.09296 316.78012 m
S
1 J
1 j
0.60000002 i
244.82283 404.71259 m
259.72519 324.68622 l
S
0 i
CM
248.18976 94.178566 m
243.77589 86.862984 l
249.67448 85.764557 l
h
248.18976 94.178566 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
261.18976 316.82144 m
256.77588 324.13702 l
262.6745 325.23544 l
h
261.18976 316.82144 m
S
1 1 1 sc
CM
217.08661 64.460648 m
254.08661 64.460648 l
254.08661 54.460648 l
217.08661 54.460648 l
h
217.08661 64.460648 m
f
/Cs1 SC
0 sc
1 0 0 -1 -13 411 cm
231.24091 354.53934 m
('3/+$,05)[ 5.335938 4.449219 4.449219 4.000000 4.449219 2.222656 4.449219 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
283.17715 315.49997 m
296.07391 334.84509 l
S
0 i
CM
287.51151 69.498497 m
285.57007 77.819 l
280.57776 74.490799 l
h
287.51151 69.498497 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
300.51151 341.5015 m
298.57007 333.181 l
293.57776 336.50922 l
h
300.51151 341.5015 m
S
1 J
1 j
0.60000002 i
283.17715 315.49997 m
298.26785 360.77206 l
S
0 i
CM
287.79767 42.638454 m
288.11392 51.176605 l
282.42181 49.27924 l
h
287.79767 42.638454 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
300.79767 368.36154 m
301.11392 359.82339 l
295.42181 361.72076 l
h
300.79767 368.36154 m
S
1 J
1 j
0.60000002 i
282.54724 314.92914 m
295.66168 396.27551 l
S
0 i
CM
283.93497 6.8264542 m
285.62344 15.201962 l
279.69992 14.246988 l
h
283.93497 6.8264542 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
296.93497 404.17355 m
298.62344 395.79803 l
292.69992 396.75302 l
h
296.93497 404.17355 m
S
1 1 1 sc
CM
257.14172 88.13781 m
294.14172 88.13781 l
294.14172 78.13781 l
257.14172 78.13781 l
h
257.14172 88.13781 m
f
/Cs1 SC
0 sc
1 0 0 -1 -13 411 cm
273.30188 330.86218 m
(6$*#+#\)%)[ 5.777344 4.449219 4.000000 1.777344 4.000000 1.777344 4.449219 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
271.27557 314.14566 m
278.01471 287.56354 l
S
0 i
CM
266.98068 131.19113 m
262.10672 124.17371 l
267.92273 122.69923 l
h
266.98068 131.19113 m
f
0 J
0 j
1 0 0 -1 -13 411 cm
279.98068 279.80887 m
275.10672 286.82629 l
280.92273 288.30078 l
h
279.98068 279.80887 m
S
/Cs1 SC
0 sc
/F2.1[ 8 0 0 -8 0 0]sf
252.5899 296.56693 m
(&%'#\()[ 2.664062 4.449219 4.449219 1.777344 0.000000 ] xS
ep
end
%%Trailer
%%EOF
